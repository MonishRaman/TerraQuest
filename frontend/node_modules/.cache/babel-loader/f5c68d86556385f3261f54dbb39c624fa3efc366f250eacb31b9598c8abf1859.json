{"ast":null,"code":"import axios from 'axios';\nconst API_BASE_URL = 'http://localhost:5000/api';\nexport const api = {\n  async predictHabitability(data) {\n    const response = await axios.post(\"\".concat(API_BASE_URL, \"/habitability\"), data);\n    return response.data;\n  },\n  async classifyPlanet(data) {\n    const response = await axios.post(\"\".concat(API_BASE_URL, \"/classify\"), data);\n    return response.data;\n  },\n  async generateTransit(planetName) {\n    const response = await axios.post(\"\".concat(API_BASE_URL, \"/transit/generate\"), {\n      planetName\n    });\n    return response.data;\n  },\n  async analyzeAll(data) {\n    const response = await axios.post(\"\".concat(API_BASE_URL, \"/analyze\"), data);\n    return response.data;\n  }\n};","map":{"version":3,"names":["axios","API_BASE_URL","api","predictHabitability","data","response","post","concat","classifyPlanet","generateTransit","planetName","analyzeAll"],"sources":["C:/Users/Monish.R/Downloads/Nasa Mishra/Nasamishra/nasa-exoplanet-hackathon/frontend/src/services/api.ts"],"sourcesContent":["import axios from 'axios';\r\nimport { HabitabilityResult, PlanetClassification, TransitResult } from '../types';\r\n\r\nconst API_BASE_URL = 'http://localhost:5000/api';\r\n\r\nexport const api = {\r\n  async predictHabitability(data: {\r\n    radius: number;\r\n    orbit: number;\r\n    starType: string;\r\n    starMass?: number;\r\n    starTemp?: number;\r\n  }): Promise<HabitabilityResult> {\r\n    const response = await axios.post(`${API_BASE_URL}/habitability`, data);\r\n    return response.data;\r\n  },\r\n\r\n  async classifyPlanet(data: {\r\n    radius: number;\r\n    mass: number;\r\n    orbit: number;\r\n  }): Promise<PlanetClassification> {\r\n    const response = await axios.post(`${API_BASE_URL}/classify`, data);\r\n    return response.data;\r\n  },\r\n\r\n  async generateTransit(planetName: string): Promise<TransitResult> {\r\n    const response = await axios.post(`${API_BASE_URL}/transit/generate`, { planetName });\r\n    return response.data;\r\n  },\r\n\r\n  async analyzeAll(data: {\r\n    radius: number;\r\n    orbit: number;\r\n    mass: number;\r\n    starType: string;\r\n    starMass?: number;\r\n    starTemp?: number;\r\n  }) {\r\n    const response = await axios.post(`${API_BASE_URL}/analyze`, data);\r\n    return response.data;\r\n  }\r\n};\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAGzB,MAAMC,YAAY,GAAG,2BAA2B;AAEhD,OAAO,MAAMC,GAAG,GAAG;EACjB,MAAMC,mBAAmBA,CAACC,IAMzB,EAA+B;IAC9B,MAAMC,QAAQ,GAAG,MAAML,KAAK,CAACM,IAAI,IAAAC,MAAA,CAAIN,YAAY,oBAAiBG,IAAI,CAAC;IACvE,OAAOC,QAAQ,CAACD,IAAI;EACtB,CAAC;EAED,MAAMI,cAAcA,CAACJ,IAIpB,EAAiC;IAChC,MAAMC,QAAQ,GAAG,MAAML,KAAK,CAACM,IAAI,IAAAC,MAAA,CAAIN,YAAY,gBAAaG,IAAI,CAAC;IACnE,OAAOC,QAAQ,CAACD,IAAI;EACtB,CAAC;EAED,MAAMK,eAAeA,CAACC,UAAkB,EAA0B;IAChE,MAAML,QAAQ,GAAG,MAAML,KAAK,CAACM,IAAI,IAAAC,MAAA,CAAIN,YAAY,wBAAqB;MAAES;IAAW,CAAC,CAAC;IACrF,OAAOL,QAAQ,CAACD,IAAI;EACtB,CAAC;EAED,MAAMO,UAAUA,CAACP,IAOhB,EAAE;IACD,MAAMC,QAAQ,GAAG,MAAML,KAAK,CAACM,IAAI,IAAAC,MAAA,CAAIN,YAAY,eAAYG,IAAI,CAAC;IAClE,OAAOC,QAAQ,CAACD,IAAI;EACtB;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}