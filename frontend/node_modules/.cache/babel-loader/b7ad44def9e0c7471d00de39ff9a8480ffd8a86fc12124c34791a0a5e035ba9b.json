{"ast":null,"code":"import React,{useState}from'react';import{api}from'../services/api';import'./Dashboard.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";export const Dashboard=()=>{const[radius,setRadius]=useState(1.0);const[orbit,setOrbit]=useState(1.0);const[mass,setMass]=useState(1.0);const[starType,setStarType]=useState('G');const[loading,setLoading]=useState(false);const[habitability,setHabitability]=useState(null);const[classification,setClassification]=useState(null);const[transitImage,setTransitImage]=useState('');const handleAnalyze=async()=>{setLoading(true);try{const result=await api.analyzeAll({radius,orbit,mass,starType});setHabitability(result.habitability);setClassification(result.classification);const transit=await api.generateTransit('Exoplanet-1');setTransitImage(transit.image);}catch(error){alert('Analysis failed.');}finally{setLoading(false);}};return/*#__PURE__*/_jsxs(\"div\",{className:\"dashboard\",children:[/*#__PURE__*/_jsxs(\"header\",{children:[/*#__PURE__*/_jsx(\"h1\",{children:\"\\uD83E\\uDE90 NASA Exoplanet Advanced Analysis\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Predict habitability, classify planet types, visualize transits\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"input-section\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Planet Parameters\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"input-grid\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"input-group\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Planet Radius (Earth radii)\"}),/*#__PURE__*/_jsx(\"input\",{type:\"number\",value:radius,onChange:e=>setRadius(Number(e.target.value)),step:\"0.1\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"input-group\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Orbital Distance (AU)\"}),/*#__PURE__*/_jsx(\"input\",{type:\"number\",value:orbit,onChange:e=>setOrbit(Number(e.target.value)),step:\"0.1\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"input-group\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Planet Mass (Earth masses)\"}),/*#__PURE__*/_jsx(\"input\",{type:\"number\",value:mass,onChange:e=>setMass(Number(e.target.value)),step:\"0.1\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"input-group\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Star Type\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:starType,onChange:e=>setStarType(e.target.value),maxLength:1})]})]}),/*#__PURE__*/_jsx(\"button\",{onClick:handleAnalyze,disabled:loading,children:loading?'Analyzing...':'Analyze'})]}),habitability&&/*#__PURE__*/_jsxs(\"div\",{className:\"result-section\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Habitability Prediction\"}),/*#__PURE__*/_jsxs(\"ul\",{children:[/*#__PURE__*/_jsxs(\"li\",{children:[\"Habitable: \",habitability.habitable?'Yes':'No']}),/*#__PURE__*/_jsxs(\"li\",{children:[\"Score: \",habitability.score.toFixed(2)]}),/*#__PURE__*/_jsxs(\"li\",{children:[\"Category: \",habitability.category]}),/*#__PURE__*/_jsxs(\"li\",{children:[\"ESI: \",habitability.esi.toFixed(2)]}),/*#__PURE__*/_jsxs(\"li\",{children:[\"Equilibrium Temp: \",habitability.equilibrium_temp.toFixed(2),\" K\"]}),/*#__PURE__*/_jsxs(\"li\",{children:[\"In Habitable Zone: \",habitability.in_habitable_zone?'Yes':'No']})]})]}),classification&&/*#__PURE__*/_jsxs(\"div\",{className:\"result-section\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Planet Classification\"}),/*#__PURE__*/_jsxs(\"ul\",{children:[/*#__PURE__*/_jsxs(\"li\",{children:[\"Type: \",classification.planet_type]}),/*#__PURE__*/_jsxs(\"li\",{children:[\"Confidence: \",classification.confidence.toFixed(2)]})]})]}),transitImage&&/*#__PURE__*/_jsxs(\"div\",{className:\"result-section\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Transit Visualization\"}),/*#__PURE__*/_jsx(\"img\",{src:\"data:image/png;base64,\".concat(transitImage),alt:\"Transit Light Curve\",style:{maxWidth:'100%'}})]})]});};","map":{"version":3,"names":["React","useState","api","jsx","_jsx","jsxs","_jsxs","Dashboard","radius","setRadius","orbit","setOrbit","mass","setMass","starType","setStarType","loading","setLoading","habitability","setHabitability","classification","setClassification","transitImage","setTransitImage","handleAnalyze","result","analyzeAll","transit","generateTransit","image","error","alert","className","children","type","value","onChange","e","Number","target","step","maxLength","onClick","disabled","habitable","score","toFixed","category","esi","equilibrium_temp","in_habitable_zone","planet_type","confidence","src","concat","alt","style","maxWidth"],"sources":["C:/Users/Monish.R/Downloads/Nasa Mishra/Nasamishra/nasa-exoplanet-hackathon/frontend/src/components/Dashboard.tsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { api } from '../services/api';\r\nimport { HabitabilityResult, PlanetClassification } from '../types';\r\nimport './Dashboard.css';\r\n\r\nexport const Dashboard: React.FC = () => {\r\n  const [radius, setRadius] = useState<number>(1.0);\r\n  const [orbit, setOrbit] = useState<number>(1.0);\r\n  const [mass, setMass] = useState<number>(1.0);\r\n  const [starType, setStarType] = useState<string>('G');\r\n  const [loading, setLoading] = useState<boolean>(false);\r\n  const [habitability, setHabitability] = useState<HabitabilityResult | null>(null);\r\n  const [classification, setClassification] = useState<PlanetClassification | null>(null);\r\n  const [transitImage, setTransitImage] = useState<string>('');\r\n\r\n  const handleAnalyze = async () => {\r\n    setLoading(true);\r\n    try {\r\n      const result = await api.analyzeAll({\r\n        radius,\r\n        orbit,\r\n        mass,\r\n        starType\r\n      });\r\n      setHabitability(result.habitability);\r\n      setClassification(result.classification);\r\n      const transit = await api.generateTransit('Exoplanet-1');\r\n      setTransitImage(transit.image);\r\n    } catch (error) {\r\n      alert('Analysis failed.');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"dashboard\">\r\n      <header>\r\n        <h1>ü™ê NASA Exoplanet Advanced Analysis</h1>\r\n        <p>Predict habitability, classify planet types, visualize transits</p>\r\n      </header>\r\n      <div className=\"input-section\">\r\n        <h2>Planet Parameters</h2>\r\n        <div className=\"input-grid\">\r\n          <div className=\"input-group\">\r\n            <label>Planet Radius (Earth radii)</label>\r\n            <input \r\n              type=\"number\" value={radius} onChange={(e) => setRadius(Number(e.target.value))} step=\"0.1\" />\r\n          </div>\r\n          <div className=\"input-group\">\r\n            <label>Orbital Distance (AU)</label>\r\n            <input \r\n              type=\"number\" value={orbit} onChange={(e) => setOrbit(Number(e.target.value))} step=\"0.1\" />\r\n          </div>\r\n          <div className=\"input-group\">\r\n            <label>Planet Mass (Earth masses)</label>\r\n            <input \r\n              type=\"number\" value={mass} onChange={(e) => setMass(Number(e.target.value))} step=\"0.1\" />\r\n          </div>\r\n          <div className=\"input-group\">\r\n            <label>Star Type</label>\r\n            <input \r\n              type=\"text\" value={starType} onChange={(e) => setStarType(e.target.value)} maxLength={1} />\r\n          </div>\r\n        </div>\r\n        <button onClick={handleAnalyze} disabled={loading}>\r\n          {loading ? 'Analyzing...' : 'Analyze'}\r\n        </button>\r\n      </div>\r\n      {habitability && (\r\n        <div className=\"result-section\">\r\n          <h2>Habitability Prediction</h2>\r\n          <ul>\r\n            <li>Habitable: {habitability.habitable ? 'Yes' : 'No'}</li>\r\n            <li>Score: {habitability.score.toFixed(2)}</li>\r\n            <li>Category: {habitability.category}</li>\r\n            <li>ESI: {habitability.esi.toFixed(2)}</li>\r\n            <li>Equilibrium Temp: {habitability.equilibrium_temp.toFixed(2)} K</li>\r\n            <li>In Habitable Zone: {habitability.in_habitable_zone ? 'Yes' : 'No'}</li>\r\n          </ul>\r\n        </div>\r\n      )}\r\n      {classification && (\r\n        <div className=\"result-section\">\r\n          <h2>Planet Classification</h2>\r\n          <ul>\r\n            <li>Type: {classification.planet_type}</li>\r\n            <li>Confidence: {classification.confidence.toFixed(2)}</li>\r\n          </ul>\r\n        </div>\r\n      )}\r\n      {transitImage && (\r\n        <div className=\"result-section\">\r\n          <h2>Transit Visualization</h2>\r\n          <img src={`data:image/png;base64,${transitImage}`} alt=\"Transit Light Curve\" style={{ maxWidth: '100%' }} />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}